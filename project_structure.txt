classes:
Game:
  agent redPlayer, greenPlayer
  bool isSimulation, redPlayerTurn
  map gameMap
  prepare() -> should be removed to Agent
  play()

Map:
  list of cities
  list<city.id, list of city.id> cityGraph -> cityGraph[city x] -> list of cities connected to city x
  readMap()

City:
  id
 // list connected
  bool redArmy
  int armyCount

// will have child classes
Agent:
  list of cities -> add, remove n^2
  play(map gameMap) -> go through all occupied cities and find the best action function and can be improved later
// boolean didWin()


Gui:
 drawMap()
 updateArmiesAt(int id, int armyCount, boolean armyType)
 displayWinner(boolean type)
 ......

GameController:
    create game of chosen type ..

  1. passive agent, aggressive agent, nearly pacifist
  2. greedy+A*, A* realtime, minimax

  Verginia: passive agent + A* + GUI + (performance)
  Nadeen:  A* realtime + (performance)
  Radwan: minimax + nearly pacifist
  3egoz: greedy + aggressive agent .

GUI OPTIONS:
    1- to make the map static and select the city we want from some list
    2- to choose the city we want by clicking on the map
    3- to make the map as circles (or some other shape)
    4- add circles to the map and detect the click on the circle


Heuristics:
1- conquer the city that leaves the maximum number of (armies, cities â€¦ ) after conquering it.
2- conquer the city which minimize the number of (cities, army can be taken from you) when the enemy conquer you next time

Done:
    - load map from file and tested it on map1.txt {change it to xml or db later or protocol buffer}
    - generate random type and number of army in each city at the start of the game

Shb7ana list:
    - memento (undo and redo)
    - click on map to choose which city to place armies

TODO LIST for gui
city class should have x and y attributes
boolean to indicate red or green city
