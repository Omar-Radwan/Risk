classes:
Game:
  agent redPlayer, greenPlayer
  bool isSimulation, redPlayerTurn
  map gameMap
  initializeGame()
  play()

GameMap:
  list of cities
  hashMap<city.id, list of city.id> cityGraph -> cityGraph[city x] -> list of cities connected to city x
  readMap()

City:
  id
  list connected
  bool armyType
  int armyCount

// will have child classes
Agent:
  list of cities -> add, remove n^2
  applyHeuristic(map gameMap) -> go through all occupied cities and find the best action function and can be improved later
  boolean didWin()

Gui:
 drawMap()
 updateArmiesAt(int id, int armyCount, boolean armyType)

GameController:
 Game game
  1. passive agent, aggressive agent, nearly pacifist
  2. greedy+A*, A* realtime, minimax

  Verginia: passive agent + greedy+A* + GUI + (performance)
  Nadeen: aggressive agent + A* realtime + (performance)
  Radwan: minimax + nearly pacifist
