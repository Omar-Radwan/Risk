classes:
Game:
  agent redPlayer, greenPlayer
  bool isSimulation, redPlayerTurn
  map gameMap
  prepare() -> should be removed to Agent
  play()

Map:
  list of cities
  list<city.id, list of city.id> cityGraph -> cityGraph[city x] -> list of cities connected to city x
  readMap()

City:
  id
 // list connected
  bool redArmy
  int armyCount

// will have child classes
Agent:
  list of cities -> add, remove n^2
  play(map gameMap) -> go through all occupied cities and find the best action function and can be improved later
// boolean didWin()

A(8 red)
Gui:
 drawMap()
 updateArmiesAt(int id, int armyCount, boolean armyType)
 displayWinner(boolean type)
 ......

GameController:
    create game of chosen type ..

  1. passive agent, aggressive agent, nearly pacifist
  2. greedy+A*, A* realtime, minimax

  Verginia: passive agent + greedy+A* + GUI + (performance)
  Nadeen: aggressive agent + A* realtime + (performance)
  Radwan: minimax + nearly pacifist
  3egoz:

Done:
    - load map from file and tested it on map1.txt {change it to xml or db later or protocol buffer}
    - generate random type and number of army in each city at the start of the game

Shb7ana list:
    - memento (undo and redo)
    - click on map to choose which city to place armies